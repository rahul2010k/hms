<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.smrp</groupId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<description>This is HMS application</description>
	<properties>
		<java-version>1.8</java-version>
		<org.springframework-version>4.2.2.RELEASE</org.springframework-version>
		<org.hdiv-version>3.2.0</org.hdiv-version>
		<org.springframework.security-version>4.0.1.RELEASE</org.springframework.security-version>
		<org.slf4j-version>1.7.12</org.slf4j-version>
	</properties>
	<modules>
		<module>hms-dao</module>
		<module>hms-service</module>
		<module>hms-web</module>
	</modules>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.21</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.1.7</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.7</version>
		</dependency>

		<dependency>
    		<groupId>javax.servlet</groupId>
		    <artifactId>javax.servlet-api</artifactId>
		    <version>3.1.0</version>
		</dependency>

		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
		</dependency>

		<dependency>
		    <groupId>org.springframework</groupId>
		    <artifactId>spring-core</artifactId>
		    <version>${org.springframework-version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>3.2.4</version>
		</dependency>

		<dependency>
			<groupId>com.mchange</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.2-pre4</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
		    <groupId>org.hdiv</groupId>
		    <artifactId>hdiv-config</artifactId>
		    <version>${org.hdiv-version}</version>
		</dependency>
		<dependency>
		    <groupId>org.hdiv</groupId>
		    <artifactId>hdiv-spring-mvc</artifactId>
		    <version>${org.hdiv-version}</version>
		</dependency>


		<!-- THIS SECTION SPECIFIES LOGGING MECHANISM TO USE UNDER SLF4J. BY DEFAULT, 
			LOG4J IS ENABLED. IF YOU WISH TO USE DIFFERENT, THEN JUST COMMENT LOG4J AND 
			UNCOMMENT THE ONE YOU WANT e.g.JCL OR JDK14. CLASSES FROM THE UNDERLYING 
			LOGGING API, SAY e.g. LOG4J ARE MADE AVAILABLE BY SLF4J ELIMINATING THE NEED 
			TO ADD LOG4J AS DEPENDENCY. HOWEVER, IN CASE, IF THERE IS TRANSITIVE DEPENDENCY 
			ON LOG4J THEN YOU CAN SPECIFY ITS SCOPE AS 'PROVIDED' IN '<dependencyManagement>' 
			BELOW. -->
		<!-- Anything using log4j should defer to slf4j. -->

		<!-- Anything using commons-logging should defer to slf4j. -->

		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>jcl-over-slf4j</artifactId> 
			<version>1.5.6</version> <scope>runtime</scope> </dependency> <dependency> 
			<groupId>org.slf4j</groupId> <artifactId>slf4j-jdk14</artifactId> <version>1.5.6</version> 
			<scope>runtime</scope> </dependency> -->


	</dependencies>

	<!-- DEPENDENCY MANAGEMENT - Uncomment the dependency that you want as provided 
		Manage secondary loggers by claiming they will be provided. -->
	<!-- <dependencyManagement> <dependencies> <dependency> <groupId>log4j</groupId> 
		<artifactId>log4j</artifactId> <version>1.2.15</version> <scope>provided</scope> 
		</dependency> <dependency> <groupId>commons-logging</groupId> <artifactId>commons-logging</artifactId> 
		<version>1.0.4</version> <scope>provided</scope> </dependency> <dependency> 
		<groupId>commons-logging</groupId> <artifactId>commons-logging-api</artifactId> 
		<version>1.0.4</version> <scope>provided</scope> </dependency> </dependencies> 
		</dependencyManagement> -->

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.smrp</groupId>
				<artifactId>hms-service</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<artifactId>hms</artifactId>
	<name>hms</name>
</project>